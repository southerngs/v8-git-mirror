#
# Autogenerated by generate-bytecode-expectations.
#

---
pool type: mixed
execute: yes
wrap: no
test function name: f

---
snippet: "
  function f() {
    if (0) {
      return 1;
    } else {
      return -1;
    }
  };
  f();
"
frame size: 0
parameter count: 1
bytecode array length: 4
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(-1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() {
    if ('lucky') {
      return 1;
    } else {
      return -1;
    }
  };
  f();
"
frame size: 0
parameter count: 1
bytecode array length: 4
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() {
    if (false) {
      return 1;
    } else {
      return -1;
    }
  };
  f();
"
frame size: 0
parameter count: 1
bytecode array length: 4
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(-1),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() {
    if (false) {
      return 1;
    }
  };
  f();
"
frame size: 0
parameter count: 1
bytecode array length: 3
bytecodes: [
  B(StackCheck),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() {
    var a = 1;
    if (a) {
      a += 1;
    } else {
      return 2;
    }
  };
  f();
"
frame size: 2
parameter count: 1
bytecode array length: 24
bytecodes: [
  B(StackCheck),
  B(LdaSmi), U8(1),
  B(Star), R(0),
  B(JumpIfToBooleanFalse), U8(14),
  B(Ldar), R(0),
  B(Star), R(1),
  B(LdaSmi), U8(1),
  B(Add), R(1),
  B(Star), R(0),
  B(Jump), U8(5),
  B(LdaSmi), U8(2),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(a) {
    if (a <= 0) {
      return 200;
    } else {
      return -200;
    }
  };
  f(99);
"
frame size: 1
parameter count: 2
bytecode array length: 22
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(LdaZero),
  B(TestLessThanOrEqual), R(0),
  B(JumpIfFalse), U8(7),
  B(Wide), B(LdaSmi), U16(200),
  B(Return),
  B(Wide), B(LdaSmi), U16(-200),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(a, b) { if (a in b) { return 200; } }f('prop', { prop: 'yes'});
"
frame size: 1
parameter count: 3
bytecode array length: 18
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(Ldar), R(arg1),
  B(TestIn), R(0),
  B(JumpIfFalse), U8(7),
  B(Wide), B(LdaSmi), U16(200),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(z) { var a = 0; var b = 0; if (a === 0.01) {
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
   return 200; } else { return -200; } } f(0.001);
"
frame size: 3
parameter count: 2
bytecode array length: 287
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(LdaZero),
  B(Star), R(1),
  B(Ldar), R(0),
  B(Star), R(2),
  B(LdaConstant), U8(0),
  B(TestEqualStrict), R(2),
  B(JumpIfFalseConstant), U8(1),
  B(Ldar), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Wide), B(LdaSmi), U16(200),
  B(Return),
  B(Wide), B(LdaSmi), U16(-200),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
  InstanceType::HEAP_NUMBER_TYPE,
  kInstanceTypeDontCare,
]
handlers: [
]

---
snippet: "
  function f() {
    var a = 0; var b = 0;
    if (a) {
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    b = a; a = b;
    return 200; } else { return -200; }
  };
  f();
"
frame size: 2
parameter count: 1
bytecode array length: 281
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(LdaZero),
  B(Star), R(1),
  B(Ldar), R(0),
  B(JumpIfToBooleanFalseConstant), U8(0),
  B(Ldar), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Star), R(1),
  B(Star), R(0),
  B(Wide), B(LdaSmi), U16(200),
  B(Return),
  B(Wide), B(LdaSmi), U16(-200),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
  kInstanceTypeDontCare,
]
handlers: [
]

---
snippet: "
  function f(a, b) {
    if (a == b) { return 1; }
    if (a === b) { return 1; }
    if (a < b) { return 1; }
    if (a > b) { return 1; }
    if (a <= b) { return 1; }
    if (a >= b) { return 1; }
    if (a in b) { return 1; }
    if (a instanceof b) { return 1; }
    return 0;
  }
  f(1, 1);
"
frame size: 6
parameter count: 3
bytecode array length: 226
bytecodes: [
  B(StackCheck),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestEqual), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestEqualStrict), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestLessThan), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestGreaterThan), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestLessThanOrEqual), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestGreaterThanOrEqual), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(3),
  B(Ldar), R(arg1),
  B(TestIn), R(3),
  B(JumpIfFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(Ldar), R(arg0),
  B(Star), R(0),
  B(Ldar), R(arg1),
  B(Star), R(1),
  B(Star), R(3),
  B(InvokeIntrinsic), U16(Runtime::k_IsJSReceiver), R(3), U8(1),
  B(JumpIfToBooleanFalse), U8(4),
  B(Jump), U8(16),
  B(LdaSmi), U8(61),
  B(Star), R(3),
  B(LdaConstant), U8(0),
  B(Star), R(4),
  B(CallRuntime), U16(Runtime::kNewTypeError), R(3), U8(2),
  B(Throw),
  B(Ldar), R(1),
  B(Star), R(3),
  B(LdaConstant), U8(1),
  B(KeyedLoadIC), R(3), U8(1),
  B(Star), R(2),
  B(Star), R(3),
  B(LdaUndefined),
  B(TestEqualStrict), R(3),
  B(JumpIfFalse), U8(55),
  B(Ldar), R(1),
  B(TypeOf),
  B(Star), R(3),
  B(LdaConstant), U8(2),
  B(TestEqualStrict), R(3),
  B(JumpIfFalse), U8(4),
  B(Jump), U8(16),
  B(LdaSmi), U8(16),
  B(Star), R(3),
  B(LdaConstant), U8(0),
  B(Star), R(4),
  B(CallRuntime), U16(Runtime::kNewTypeError), R(3), U8(2),
  B(Throw),
  B(CallRuntime), U16(Runtime::k_GetOrdinaryHasInstance), R(0), U8(0),
  B(Star), R(2),
  B(Star), R(3),
  B(Ldar), R(1),
  B(Star), R(4),
  B(Ldar), R(0),
  B(Star), R(5),
  B(CallRuntime), U16(Runtime::k_Call), R(3), U8(3),
  B(Star), R(2),
  B(Jump), U8(23),
  B(Ldar), R(2),
  B(Star), R(3),
  B(Ldar), R(1),
  B(Star), R(4),
  B(Ldar), R(0),
  B(Star), R(5),
  B(CallRuntime), U16(Runtime::k_Call), R(3), U8(3),
  B(LogicalNot),
  B(LogicalNot),
  B(Star), R(2),
  B(Ldar), R(2),
  B(JumpIfToBooleanFalse), U8(5),
  B(LdaSmi), U8(1),
  B(Return),
  B(LdaZero),
  B(Return),
]
constant pool: [
  InstanceType::ONE_BYTE_INTERNALIZED_STRING_TYPE,
  InstanceType::SYMBOL_TYPE,
  InstanceType::ONE_BYTE_INTERNALIZED_STRING_TYPE,
]
handlers: [
]

---
snippet: "
  function f() {
    var a = 0;
    if (a) {
      return 20;
    } else {
      return -20;
    }
  };
  f();
"
frame size: 1
parameter count: 1
bytecode array length: 14
bytecodes: [
  B(StackCheck),
  B(LdaZero),
  B(Star), R(0),
  B(JumpIfToBooleanFalse), U8(5),
  B(LdaSmi), U8(20),
  B(Return),
  B(LdaSmi), U8(-20),
  B(Return),
  B(LdaUndefined),
  B(Return),
]
constant pool: [
]
handlers: [
]

